@{
	ViewData["Title"] = "AddStudentFeeCollection";
}
@model GCM.Entity.StudentFeeCollection;
@using Newtonsoft.Json
@{
	var subheadListJson = JsonConvert.SerializeObject(ViewBag.SubheadList);
}
<link href="~/css/select2.css" rel="stylesheet" />
<script src="~/js/select2.js"></script>

<style>
	.select2-container {
		width: 100% !important;
	}

	.select2-selection {
		height: 38px !important;
		padding: 5px;
		border-radius: 4px;
		border: 1px solid #ced4da;
	}

	.select2-selection__rendered {
		line-height: 30px !important;
	}
</style>
<div class="content-wrapper">
	<!-- Main content -->
	<section class="content">
		<div class="container-fluid">
			<form method="post" asp-action="AddStudentFeeCollection">
				<input type="hidden" name="TotalFees" id="hiddenTotalAmount">
				<input asp-for="StudentId" id="hdnStudentID" type="hidden" />

				@Html.AntiForgeryToken()
				<div style="margin-top: 20px;"></div>
				<div class="form-group">
					<label for="searchNumber">Enter Student Number:</label>
					<input type="text" id="searchNumber"  class="form-control" placeholder="Enter Student Number" />
					<div style="margin-top: 20px;"></div>
					<button id="searchBtn" class="btn btn-primary mt-2">Search</button>
					<a href="@Url.Action("ViewStudentFeeCollection", "StudentFeeCollection")" class="btn btn-secondary mt-2">
						<i class="fas fa-list mr-1"></i>
						Go to List
					</a>
				</div>

				<div id="studentDetails" class="mt-3" style="display: none;">
					<label><strong>Name:</strong> <span id="studentName"></span></label><br>
					<label><strong>Email:</strong> <span id="studentEmail"></span></label><br>
					<label><strong>Number:</strong> <span id="studentNumber"></span></label>
				</div>

				<div class="row" id="showcontent">
					<div class="col-md-6">
						<div class="form-horizontal form-bordered">
							<div class="form-group row">
								<label class="control-label col-md-3">Finance Year:</label>

								<div class="col-md-9 control-form">
									<select asp-for="FinancialYearId" class="form-control select2" asp-items="@(new SelectList(ViewBag.YearList, "Value", "Text"))">
										<option class="bi-option" value="">---Select Year---</option>
									</select>
									<span asp-validation-for="FinancialYearId" class="text-danger"></span>
								</div>
							</div>
						</div>
					</div>
					<div class="col-md-6">
						<div class="form-horizontal form-bordered">
							<div class="form-group row">

								<label class="control-label col-md-3">Term:</label>
								<div class="col-md-9 control-form">
									<select asp-for="TermId" class="form-control select2" asp-items="@(new SelectList(ViewBag.TermList, "Value", "Text"))">
										<option class="bi-option" value="">---Select Term---</option>
									</select>
									<span asp-validation-for="TermId" class="text-danger"></span>
								</div>
							</div>
						</div>
					</div>

					
					<div id="feesDetailsAuto" class="col-md-11">
						<h5 id="feesdetails"><strong>Fees Details</strong></h5>
						<table class="table table-bordered" id="feesTable">
							<thead>
								<tr>
									<th>Sub Head</th>
									<th>Fee Amount</th>
								</tr>
							</thead>
							<tbody>
								<!-- Dynamic rows will be added here -->
							</tbody>
							<tfoot>
								<tr>
									<td><strong>Total</strong></td>
									<td id="totalAmount"><strong>0.00</strong></td>
								</tr>
							</tfoot>
						</table>
					</div>
					
					<div class="card-footer text-center">
						<button type="submit" class="btn btn-success">Submit</button>
						
					</div>
				</div>
			</form>

		</div>
	</section>
</div>

<script src="~/js/common.js"></script>
<script src="~/assets/dist/js/sweetalert.js"></script>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
@section Scripts {
	<script>
		const subheadList = @Html.Raw(subheadListJson);

				$(document).ready(function () {
			$("#showcontent").hide();
			$("#feesdetails").hide();

			$("#searchBtn").click(function (e) {
				$("#feesTable").hide();
				e.preventDefault();
				var studentNumber = $("#searchNumber").val().trim();
				if (studentNumber === "") {
					alert("Please enter a student number.");
					return;
				}

				$.ajax({
					url: '@Url.Action("GetStudentDetails", "StudentFeeCollection")',
					type: 'GET',
					data: { number: studentNumber },
					success: function (response) {
						if (response.success && response.student && response.student.length > 0) {
									const student = response.student[0];
									$("#studentName").text(student.name);
									$("#studentEmail").text(student.email);
									$("#studentNumber").text(student.applicationno);
									$("#hdnStudentID").val(student.studentid);
									$("#studentDetails").show();
									$("#showcontent").show();
								} else {
									alert("Student not found.");
									$("#studentDetails").hide();
									$("#showcontent").hide();
								}

					},
					error: function () {
						alert("Error fetching student details.");
						$("#studentDetails").hide();
					}
				});
			});
		});

		//Get Fees data
		$("#TermId").change(function () {
			var selectedTerm = $(this).val();
			var financialYear = $("#FinancialYearId").val();
			var studentId = $("#hdnStudentID").val(); // Assuming student ID is stored in this field

			if (!selectedTerm || !financialYear || !studentId) {
				alert("Please select Financial Year, Term, and ensure student details are available.");
				return;
			}

			$.ajax({
				url: '@Url.Action("GetFeesDetails", "StudentFeeCollection")',
				type: 'GET',
				data: { termId: selectedTerm, financialYearId: financialYear, studentId: studentId },

					success: function (response) {

						if (response.success) {
							const fees = response.fees;

							// Check if there is only one fee and all values are zero/empty
							if (
								fees.length === 1 &&
								(!fees[0].subHeadName || fees[0].subHeadName.trim() === "") &&
								(!fees[0].subHeadId || fees[0].subHeadId == 0) &&
								(!fees[0].amount || parseFloat(fees[0].amount) === 0)
							) {
								alert("No fee details found for the selected term.");
								$("#feesTable").hide();
								$("#feesTable tbody").empty();
								$("#totalAmount").text("0.00");
								$("#hiddenTotalAmount").val("0.00");
							} else {
								$("#feesTable").show(); // Show table if valid data
								populateFeesTable(fees);
							}
						} else {
							alert("No fee details found for the selected term.");
							$("#feesTable").hide();
							$("#feesTable tbody").empty();
							$("#totalAmount").text("0.00");
							$("#hiddenTotalAmount").val("0.00");
						}
					},

				error: function () {
					alert("Error fetching fee details.");
				}
			});
		});

		function populateFeesTable(fees) {
			var tbody = $("#feesTable tbody");
			tbody.empty(); // Clear existing rows

			var totalAmount = 0;
			var rowIndex = 0; // Track row index for naming input fields

			fees.forEach(function (fee) {
				var row = `<tr>
					<td>${fee.subHeadName}  <!-- Show SubHeadName -->
						<input type="hidden" name="FeeDetails[${rowIndex}].subheadid" value="${fee.subHeadId}">  <!-- Post SubHeadId -->
					</td>
					<td>${parseFloat(fee.amount).toFixed(2)}  <!-- Show Fee Amount -->
						<input type="hidden" name="FeeDetails[${rowIndex}].Amount" value="${fee.amount}">  <!-- Post Amount -->
					</td>
				</tr>`;
				tbody.append(row);
				totalAmount += parseFloat(fee.amount);
				rowIndex++; // Increment row index
			});

			$("#totalAmount").text(totalAmount.toFixed(2)); // Update visible total
			$("#hiddenTotalAmount").val(totalAmount.toFixed(2)); // Store in hidden field for submission
		}
		
	</script>
}
