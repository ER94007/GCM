@{
	ViewData["Title"] = "AddStudentFeeCollection";
}
@model GCM.Entity.StudentFeeCollection;
@using Newtonsoft.Json
@{
	var subheadListJson = JsonConvert.SerializeObject(ViewBag.SubheadList);
}
<link href="~/css/select2.css" rel="stylesheet" />
<script src="~/js/select2.js"></script>

<style>
	.select2-container {
		width: 100% !important;
	}

	.select2-selection {
		height: 38px !important;
		padding: 5px;
		border-radius: 4px;
		border: 1px solid #ced4da;
	}

	.select2-selection__rendered {
		line-height: 30px !important;
	}
</style>
<div class="content-wrapper">
	<!-- Main content -->
	<section class="content">
		<div class="container-fluid">
			<form method="post" asp-action="AddStudentFeeCollection">
				<input type="hidden" name="TotalFees" id="hiddenTotalAmount">
				@Html.AntiForgeryToken()
				<div style="margin-top: 20px;"></div>
				<div class="form-group">
					<label for="searchNumber">Enter Student Number:</label>
					<input type="text" id="searchNumber" asp-for="StudentId" class="form-control" placeholder="Enter Student Number" />
					<div style="margin-top: 20px;"></div>
					<button id="searchBtn" class="btn btn-primary mt-2">Search</button>
				</div>

				<div id="studentDetails" class="mt-3" style="display: none;">
					<label><strong>Name:</strong> <span id="studentName"></span></label><br>
					<label><strong>Email:</strong> <span id="studentEmail"></span></label><br>
					<label><strong>Number:</strong> <span id="studentNumber"></span></label>
				</div>

				<div class="row" id="showcontent">
					<div class="col-md-6">
						<div class="form-horizontal form-bordered">
							<div class="form-group row">
								<label class="control-label col-md-3">Finance Year:</label>

								<div class="col-md-9 control-form">
									<select asp-for="FinancialYearId" class="form-control select2" asp-items="@(new SelectList(ViewBag.YearList, "Value", "Text"))">
										<option class="bi-option" value="">---Select Year---</option>
									</select>
									<span asp-validation-for="FinancialYearId" class="text-danger"></span>
								</div>
							</div>
						</div>
					</div>
					<div class="col-md-6">
						<div class="form-horizontal form-bordered">
							<div class="form-group row">

								<label class="control-label col-md-3">Term:</label>
								<div class="col-md-9 control-form">
									<select asp-for="TermId" class="form-control select2" asp-items="@(new SelectList(ViewBag.TermList, "Value", "Text"))">
										<option class="bi-option" value="">---Select Term---</option>
									</select>
									<span asp-validation-for="TermId" class="text-danger"></span>
								</div>
							</div>
						</div>
					</div>

					<div>
						<label><strong>Select Addition Method:</strong></label><br>
						<input type="radio" name="formType" value="form1" id="form1" checked class="green-radio">
						<label for="form1">1. Add Automatically</label>
						<input type="radio" name="formType" value="form2" id="form2" class="green-radio">
						<label for="form2">2. Add by Form</label>
					</div>
					<div id="feesDetailsAuto" class="mt-4">
						<h5><strong>Fees Details</strong></h5>
						<table class="table table-bordered" id="feesTable">
							<thead>
								<tr>
									<th>Sub Head</th>
									<th>Fee Amount</th>
								</tr>
							</thead>
							<tbody>
								<!-- Dynamic rows will be added here -->
							</tbody>
							<tfoot>
								<tr>
									<td><strong>Total</strong></td>
									<td id="totalAmount"><strong>0.00</strong></td>
								</tr>
							</tfoot>
						</table>
					</div>

					<div id="feesDetailsManually" class="table-responsive mt-4">
						<button type="button" class="btn btn-primary btn-add mb-2" id="addRowBtn">Add Row</button>
						<table class="table table-bordered" id="dynamicTable">
							<thead class="">
								<tr>
									<th>Subhead</th>
									<th>Fee Amount</th>
								</tr>
							</thead>
							<tbody>
								<tr>
									<td>
										<select name="FeeDetailLists[0].SubHeadId" class="form-control subhead-select">
											<option value="">---Select Subhead---</option>
											@foreach (var subhead in ViewBag.SubheadList as List<SelectListItem>)
											{
												<option value="@subhead.Value">@subhead.Text</option>
											}
										</select>
									</td>
									<td>
										<input name="FeeDetailLists[0].Amount" id="feerow1" type="number" class="form-control" placeholder="Enter Fee">
									</td>
									<td>
										<button type="button" class="btn btn-danger btn-remove">Remove</button>
									</td>
								</tr>
							</tbody>
							<tfoot>
								<tr>
									<td><strong>Total</strong></td>
									<td id="dynamicTotalAmount"><strong>0.00</strong></td>
									<td></td>
								</tr>
							</tfoot>

						</table>
					</div>
					<div class="card-footer text-center">
						<button type="submit" class="btn btn-success">Submit</button>
						<a href="@Url.Action("GetFinancialTermData", "FinancialYearTermWiseFee")" class="btn btn-secondary">
							<i class="fas fa-list mr-1"></i>
							Go to List
						</a>
					</div>
				</div>
			</form>

		</div>
	</section>
</div>

<script src="~/js/common.js"></script>
<script src="~/assets/dist/js/sweetalert.js"></script>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
@section Scripts {
	<script>
		const subheadList = @Html.Raw(subheadListJson);

				$(document).ready(function () {
			$("#showcontent").hide();

			$("#searchBtn").click(function (e) {
				e.preventDefault();


				var studentNumber = $("#searchNumber").val().trim();
				if (studentNumber === "") {
					alert("Please enter a student number.");
					return;
				}

				$.ajax({
					url: '@Url.Action("GetStudentDetails", "StudentFeeCollection")',
					type: 'GET',
					data: { number: studentNumber },
					success: function (response) {
						if (response.success) {
							$("#studentName").text(response.student.name);
							$("#studentEmail").text(response.student.email);
							$("#studentNumber").text(response.student.applicationno);
							$("#studentDetails").show();
							$("#showcontent").show();
						} else {
							alert("Student not found.");
							$("#studentDetails").hide();
							$("#showcontent").hide();
						}
					},
					error: function () {
						alert("Error fetching student details.");
						$("#studentDetails").hide();
					}
				});
			});
			$("#feesDetailsManually").hide();
				 $("input[name='formType']").change(function () {
			if ($("#form2").is(":checked")) {
				$("#feesDetailsManually").show();
				$("#feesDetailsAuto").hide();

				$("#feesTable tbody").empty(); // Clear all rows
				$("#totalAmount").text("0.00"); // Reset the total amount display
				$("#hiddenTotalAmount").val("0.00"); // Reset hidden field
			} else {
				$("#feesDetailsManually").hide();
				$("#feesDetailsAuto").show();
				$("#dynamicTable tbody").empty(); // Clear all manual rows
				addInitialRow();
			}
			});
		});

		//Get Fees data
		$("#TermId").change(function () {
			var selectedTerm = $(this).val();
			var financialYear = $("#FinancialYearId").val();
			var studentId = $("#searchNumber").val(); // Assuming student ID is stored in this field

			if (!selectedTerm || !financialYear || !studentId) {
				alert("Please select Financial Year, Term, and ensure student details are available.");
				return;
			}

			$.ajax({
				url: '@Url.Action("GetFeesDetails", "StudentFeeCollection")',
				type: 'GET',
				data: { termId: selectedTerm, financialYearId: financialYear, studentId: studentId },
				success: function (response) {
					  console.log("Response Data:", response);
					if (response.success) {
						debugger;
						populateFeesTable(response.fees);
					} else {
						alert("No fee details found for the selected term.");
						$("#feesTable tbody").empty();
						$("#totalAmount").text("0.00");
					}
				},
				error: function () {
					alert("Error fetching fee details.");
				}
			});
		});

		function populateFeesTable(fees) {
			var tbody = $("#feesTable tbody");
			tbody.empty(); // Clear existing rows

			var totalAmount = 0;
			var rowIndex = 0; // Track row index for naming input fields

			fees.forEach(function (fee) {
				var row = `<tr>
					<td>${fee.subHeadName}  <!-- Show SubHeadName -->
						<input type="hidden" name="FeeDetails[${rowIndex}].subheadid" value="${fee.subHeadId}">  <!-- Post SubHeadId -->
					</td>
					<td>${parseFloat(fee.amount).toFixed(2)}  <!-- Show Fee Amount -->
						<input type="hidden" name="FeeDetails[${rowIndex}].Amount" value="${fee.amount}">  <!-- Post Amount -->
					</td>
				</tr>`;
				tbody.append(row);
				totalAmount += parseFloat(fee.amount);
				rowIndex++; // Increment row index
			});

			$("#totalAmount").text(totalAmount.toFixed(2)); // Update visible total
			$("#hiddenTotalAmount").val(totalAmount.toFixed(2)); // Store in hidden field for submission
		}



		document.addEventListener('DOMContentLoaded', function () {
			const addRowBtn = document.getElementById('addRowBtn');
			const dynamicTable = document.getElementById('dynamicTable').getElementsByTagName('tbody')[0];
			let rowIndex = dynamicTable.rows.length;

			const createRow = (index) => {
				let options = '<option value="">---Select Subhead---</option>';
				subheadList.forEach(item => {
					options += `<option value="${item.Value}">${item.Text}</option>`;
				});

				return `
					<tr>
						<td>
							   <select name="FeeDetailLists[${index}].subheadid" class="form-control subhead-select">
								${options}
							</select>
						</td>
						<td>
							   <input name="FeeDetailLists[${index}].Amount" type="number" class="form-control fee-amount" placeholder="Enter Fee">
						</td>
						<td>
							<button type="button" class="btn btn-danger btn-remove">Remove</button>
						</td>
					</tr>`;
			};

			addRowBtn.addEventListener('click', () => {
				const newRowHtml = createRow(rowIndex);
				const tempDiv = document.createElement('tbody');
				tempDiv.innerHTML = newRowHtml;
				dynamicTable.appendChild(tempDiv.firstElementChild);
				rowIndex++;
				updateDropdowns();
				calculateTotal();
			});

			dynamicTable.addEventListener('click', (event) => {
				if (event.target.classList.contains('btn-remove')) {
					const row = event.target.closest('tr');
					const rows = dynamicTable.getElementsByTagName('tr');
					if (rows.length > 1) {
						row.remove();
						updateDropdowns();
						calculateTotal();
					} else {
						alert('At least one row must be present!');
					}
				}
			});

			dynamicTable.addEventListener('input', (event) => {
				if (event.target.classList.contains('fee-amount')) {
					calculateTotal();
				}
			});

			function calculateTotal() {
				const feeInputs = document.querySelectorAll('.fee-amount');
				let total = 0;

				feeInputs.forEach(input => {
					const value = parseFloat(input.value);
					if (!isNaN(value)) {
						total += value;
					}
				});

				document.getElementById('dynamicTotalAmount').innerHTML = `<strong>${total.toFixed(2)}</strong>`;
				document.getElementById('hiddenTotalAmount').value = total.toFixed(2);
			}

			function updateDropdowns() {
				const allSelects = document.querySelectorAll('.subhead-select');
				const selectedValues = Array.from(allSelects).map(select => select.value);

				allSelects.forEach(select => {
					const currentValue = select.value;
					const options = select.querySelectorAll('option');
					options.forEach(option => {
						if (option.value !== "" && selectedValues.includes(option.value) && option.value !== currentValue) {
							option.style.display = 'none';
						} else {
							option.style.display = 'block';
						}
					});
				});
			}
		});
	</script>
}
